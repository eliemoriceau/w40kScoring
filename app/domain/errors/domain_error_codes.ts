/**
 * Domain Error Codes
 * Centralized catalog of all domain error codes
 * Following DDD ubiquitous language principles
 */
export const DomainErrorCodes = {
  PSEUDO_ALREADY_TAKEN: 'PSEUDO_ALREADY_TAKEN',
  PARTIE_NOT_FOUND: 'PARTIE_NOT_FOUND',
  UNAUTHORIZED_PARTIE_ACCESS: 'UNAUTHORIZED_PARTIE_ACCESS',
  INVALID_PARTIE_ID: 'INVALID_PARTIE_ID',
  INVALID_USER_ID: 'INVALID_USER_ID',
  GAME_NOT_IN_PROGRESS: 'GAME_NOT_IN_PROGRESS',
  ROUND_NOT_FOUND: 'ROUND_NOT_FOUND',
  ROUND_ALREADY_COMPLETED: 'ROUND_ALREADY_COMPLETED',
  UNAUTHORIZED_ROUND_ACCESS: 'UNAUTHORIZED_ROUND_ACCESS',
  INVALID_SCORES: 'INVALID_SCORES',
  // Score Service specific errors
  INVALID_SCORE_TYPE_FOR_SERVICE: 'INVALID_SCORE_TYPE_FOR_SERVICE',
  SCORE_VALUE_OUT_OF_RANGE: 'SCORE_VALUE_OUT_OF_RANGE',
  SECONDARY_SCORE_NAME_REQUIRED: 'SECONDARY_SCORE_NAME_REQUIRED',
  CHALLENGER_FORBIDDEN_IN_FIRST_ROUND: 'CHALLENGER_FORBIDDEN_IN_FIRST_ROUND',
  CHALLENGER_ALREADY_EXISTS_IN_ROUND: 'CHALLENGER_ALREADY_EXISTS_IN_ROUND',
  INSUFFICIENT_DEFICIT_FOR_CHALLENGER: 'INSUFFICIENT_DEFICIT_FOR_CHALLENGER',
  NO_PREVIOUS_ROUND_FOR_CHALLENGER: 'NO_PREVIOUS_ROUND_FOR_CHALLENGER',
  OPPONENT_NOT_FOUND_FOR_CHALLENGER: 'OPPONENT_NOT_FOUND_FOR_CHALLENGER',
  UNAUTHORIZED_SCORE_ACCESS: 'UNAUTHORIZED_SCORE_ACCESS',
} as const

export type DomainErrorCode = (typeof DomainErrorCodes)[keyof typeof DomainErrorCodes]
